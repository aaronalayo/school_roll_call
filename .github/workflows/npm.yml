
name: Node.js CI

on: [push, pull_request]

jobs:

  integration-tests:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - uses: actions/checkout@v2
      - name: Check out repository code
        uses: actions/setup-node@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        
        run: npm install

      - name: Migrate database tables
        run: npm run migrate:latest

      - name: Seed database tables
        run: npm run seed:run
      
      - name: Run integration-tests
        run: npm run integration-test
        
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/
          # The hostname used to communicate with the PostgreSQL service container

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install
    - run: npm run build --if-present
    
  unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install
    - run: npm run unit-test

  # integration-test:

  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./app
  #   strategy:
  #     matrix:
  #       node-version: [12.x, 14.x, 16.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}

  #   - run: npm install
  #   - run: npm run integration-test

